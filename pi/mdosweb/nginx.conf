# the upstream component nginx needs to connect to
upstream django {
    server unix:///home/pi/mdos/pi/mdosweb/mdosweb.sock; # for a file socket
    #server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}

server {
	listen 80;
	server_name tuer.maschinendeck.org;
	return 301 https://tuer.maschinendeck.org/;
}

# configuration of the server
server {
    # the port your site will be served on
    listen      443;
    # the domain name it will serve for
    server_name tuer.maschinendeck.org; # substitute your machine's IP address or FQDN
    charset     utf-8;

	ssl on;
	ssl_certificate /etc/letsencrypt/live/tuer.maschinendeck.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/tuer.maschinendeck.org/privkey.pem;

	ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # max upload size
    client_max_body_size 1M;   # adjust to taste

    location /static {
        alias /home/pi/mdos/pi/mdosweb/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /home/pi/mdos/pi/mdosweb/uwsgi_params; # the uwsgi_params file you installed
    }
}
